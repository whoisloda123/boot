/*
 * This file is generated by jOOQ.
 */
package com.liucan.boot.persist.jooq.amazondata.tables;


import com.liucan.boot.persist.jooq.amazondata.AmazonData;
import com.liucan.boot.persist.jooq.amazondata.Indexes;
import com.liucan.boot.persist.jooq.amazondata.Keys;
import com.liucan.boot.persist.jooq.amazondata.tables.records.ShopInfoRecord;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;


/**
 * 店铺表
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.10.7"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class ShopInfo extends TableImpl<ShopInfoRecord> {

    private static final long serialVersionUID = -397706929;

    /**
     * The reference instance of <code>amazon_data.shop_info</code>
     */
    public static final ShopInfo SHOP_INFO = new ShopInfo();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ShopInfoRecord> getRecordType() {
        return ShopInfoRecord.class;
    }

    /**
     * The column <code>amazon_data.shop_info.id</code>.
     */
    public final TableField<ShopInfoRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>amazon_data.shop_info.shop_id</code>. 店铺id
     */
    public final TableField<ShopInfoRecord, Integer> SHOP_ID = createField("shop_id", org.jooq.impl.SQLDataType.INTEGER, this, "店铺id");

    /**
     * The column <code>amazon_data.shop_info.shop_name</code>. 店铺名
     */
    public final TableField<ShopInfoRecord, String> SHOP_NAME = createField("shop_name", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "店铺名");

    /**
     * Create a <code>amazon_data.shop_info</code> table reference
     */
    public ShopInfo() {
        this(DSL.name("shop_info"), null);
    }

    /**
     * Create an aliased <code>amazon_data.shop_info</code> table reference
     */
    public ShopInfo(String alias) {
        this(DSL.name(alias), SHOP_INFO);
    }

    /**
     * Create an aliased <code>amazon_data.shop_info</code> table reference
     */
    public ShopInfo(Name alias) {
        this(alias, SHOP_INFO);
    }

    private ShopInfo(Name alias, Table<ShopInfoRecord> aliased) {
        this(alias, aliased, null);
    }

    private ShopInfo(Name alias, Table<ShopInfoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "店铺表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return AmazonData.AMAZON_DATA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SHOP_INFO_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ShopInfoRecord, Integer> getIdentity() {
        return Keys.IDENTITY_SHOP_INFO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ShopInfoRecord> getPrimaryKey() {
        return Keys.KEY_SHOP_INFO_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ShopInfoRecord>> getKeys() {
        return Arrays.<UniqueKey<ShopInfoRecord>>asList(Keys.KEY_SHOP_INFO_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ShopInfo as(String alias) {
        return new ShopInfo(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ShopInfo as(Name alias) {
        return new ShopInfo(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ShopInfo rename(String name) {
        return new ShopInfo(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ShopInfo rename(Name name) {
        return new ShopInfo(name, null);
    }
}
