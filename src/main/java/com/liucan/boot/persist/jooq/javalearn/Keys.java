/*
 * This file is generated by jOOQ.
 */
package com.liucan.boot.persist.jooq.javalearn;


import com.liucan.boot.persist.jooq.javalearn.tables.CommonUser;
import com.liucan.boot.persist.jooq.javalearn.tables.records.CommonUserRecord;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;

import javax.annotation.Generated;


/**
 * A class modelling foreign key relationships and constraints of tables of
 * the <code>java_learn</code> schema.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.10.7"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<CommonUserRecord, Integer> IDENTITY_COMMON_USER = Identities0.IDENTITY_COMMON_USER;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<CommonUserRecord> KEY_COMMON_USER_PRIMARY = UniqueKeys0.KEY_COMMON_USER_PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<CommonUserRecord, Integer> IDENTITY_COMMON_USER = Internal.createIdentity(CommonUser.COMMON_USER, CommonUser.COMMON_USER.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<CommonUserRecord> KEY_COMMON_USER_PRIMARY = Internal.createUniqueKey(CommonUser.COMMON_USER, "KEY_common_user_PRIMARY", CommonUser.COMMON_USER.ID);
    }
}
